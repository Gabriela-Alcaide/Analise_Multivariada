#código para criar histograma antes da normalização
#mudar em 2 lugares
hist(Base_de_Dados$valencia, probability = TRUE, col = "lightblue", border = "black", main = "Histograma com curva valencia ", xlab = "Valores", ylab = "Densidade")

#plotando o shapiro antes
shapiro.test(Base_de_Dados$valencia)

# Sobrepor a curva da distribuição normal
#Mudar em 4 lugares
x <- seq(min(Base_de_Dados$valencia), max(Base_de_Dados$valencia), length = 100)
curve(dnorm(x, mean = mean(Base_de_Dados$valencia), sd = sd(Base_de_Dados$valencia)), col = "red", lwd = 2, add = TRUE)

#código para qq plot antes da normalização
#mudar em 3 lugares
qqnorm(Base_de_Dados$valencia, main = "Q-Q Plot valencia")
qqline(Base_de_Dados$valencia, col = "red", lwd = 2)

# APLICAÇÃO DE BOX-COX

# Ajastaremos dados, não um modelo.
boxcox_transform <- boxcox(Base_de_Dados$valencia ~ 1)

# Encontrar o valor de lambda que maximiza
# a função de log-verossimilhança.
lambda <- boxcox_transform$x[which.max(boxcox_transform$y)]

# Aplicar a transformação com o lambda ideal.
Base_de_Dados$valencia_norm <- (Base_de_Dados$valencia^lambda - 1) / lambda

shapiro.test(Base_de_Dados$valencia_norm)

#código para criar histograma
#mudar em 2 lugares
hist(Base_de_Dados$valencia_norm, probability = TRUE, col = "lightblue", border = "black", main = "Histograma com curva valencia_norm", xlab = "Valores", ylab = "Densidade")

# Sobrepor a curva da distribuição normal
#Mudar em 4 lugares
x <- seq(min(Base_de_Dados$valencia_norm), max(Base_de_Dados$valencia_norm), length = 100)
curve(dnorm(x, mean = mean(Base_de_Dados$valencia_norm), sd = sd(Base_de_Dados$valencia_norm)), col = "red", lwd = 2, add = TRUE)

#código para qq plot
#mudar em 3 lugares
qqnorm(Base_de_Dados$valencia_norm, main = "Q-Q Plot valencia_norm")
qqline(Base_de_Dados$valencia_norm, col = "red", lwd = 2)
